diff --git a/CMakeLists.txt b/CMakeLists.txt
index abf52a5..252689d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -20,29 +20,41 @@ if (USE_CCACHE)
         set(CXX_LAUNCHER "${CCACHE_PROGRAM}")
         set(CCCACHE_EXPORTS "")
 
-        foreach(option ${CCACHE_OPTIONS})
-            set(CCCACHE_EXPORTS "${CCCACHE_EXPORTS}\nexport ${option}")
-        endforeach()
-
-        configure_file(${CMAKE_CURRENT_LIST_DIR}/launch-c.in   launch-c)
-        configure_file(${CMAKE_CURRENT_LIST_DIR}/launch-cxx.in launch-cxx)
-
-        execute_process(COMMAND chmod a+rx
-                        "${CMAKE_CURRENT_BINARY_DIR}/launch-c"
-                        "${CMAKE_CURRENT_BINARY_DIR}/launch-cxx"
-        )
-
-        if(CMAKE_GENERATOR STREQUAL "Xcode")
-            # Set Xcode project attributes to route compilation and linking
-            # through our scripts
-            set(CMAKE_XCODE_ATTRIBUTE_CC         "${CMAKE_CURRENT_BINARY_DIR}/launch-c" CACHE INTERNAL "")
-            set(CMAKE_XCODE_ATTRIBUTE_CXX        "${CMAKE_CURRENT_BINARY_DIR}/launch-cxx" CACHE INTERNAL "")
-            set(CMAKE_XCODE_ATTRIBUTE_LD         "${CMAKE_CURRENT_BINARY_DIR}/launch-c" CACHE INTERNAL "")
-            set(CMAKE_XCODE_ATTRIBUTE_LDPLUSPLUS "${CMAKE_CURRENT_BINARY_DIR}/launch-cxx" CACHE INTERNAL "")
+        if (WIN32)
+            foreach(option ${CCACHE_OPTIONS})
+                set(CCCACHE_EXPORTS "${CCCACHE_EXPORTS}\nset ${option}")
+            endforeach()
+        
+            configure_file(launch-c.bat.in   launch-c.bat)
+            configure_file(launch-cxx.bat.in launch-cxx.bat)
+
+            # Support Ninja
+            set(CMAKE_C_COMPILER_LAUNCHER   "${CMAKE_CURRENT_BINARY_DIR}/launch-c.bat" CACHE INTERNAL "")
+            set(CMAKE_CXX_COMPILER_LAUNCHER "${CMAKE_CURRENT_BINARY_DIR}/launch-cxx.bat" CACHE INTERNAL "")
         else()
-            # Support Unix Makefiles and Ninja
-            set(CMAKE_C_COMPILER_LAUNCHER   "${CMAKE_CURRENT_BINARY_DIR}/launch-c" CACHE INTERNAL "")
-            set(CMAKE_CXX_COMPILER_LAUNCHER "${CMAKE_CURRENT_BINARY_DIR}/launch-cxx" CACHE INTERNAL "")
+            foreach(option ${CCACHE_OPTIONS})
+                set(CCCACHE_EXPORTS "${CCCACHE_EXPORTS}\nexport ${option}")
+            endforeach()
+            configure_file(launch-c.in   launch-c)
+            configure_file(launch-cxx.in launch-cxx)
+
+            execute_process(COMMAND chmod a+rx
+                            "${CMAKE_CURRENT_BINARY_DIR}/launch-c"
+                            "${CMAKE_CURRENT_BINARY_DIR}/launch-cxx"
+            )
+
+            if(CMAKE_GENERATOR STREQUAL "Xcode")
+                # Set Xcode project attributes to route compilation and linking
+                # through our scripts
+                set(CMAKE_XCODE_ATTRIBUTE_CC         "${CMAKE_CURRENT_BINARY_DIR}/launch-c" CACHE INTERNAL "")
+                set(CMAKE_XCODE_ATTRIBUTE_CXX        "${CMAKE_CURRENT_BINARY_DIR}/launch-cxx" CACHE INTERNAL "")
+                set(CMAKE_XCODE_ATTRIBUTE_LD         "${CMAKE_CURRENT_BINARY_DIR}/launch-c" CACHE INTERNAL "")
+                set(CMAKE_XCODE_ATTRIBUTE_LDPLUSPLUS "${CMAKE_CURRENT_BINARY_DIR}/launch-cxx" CACHE INTERNAL "")
+            else()
+                # Support Unix Makefiles and Ninja
+                set(CMAKE_C_COMPILER_LAUNCHER   "${CMAKE_CURRENT_BINARY_DIR}/launch-c" CACHE INTERNAL "")
+                set(CMAKE_CXX_COMPILER_LAUNCHER "${CMAKE_CURRENT_BINARY_DIR}/launch-cxx" CACHE INTERNAL "")
+            endif()
         endif()
 
         message(STATUS "Using ccache: ${CCACHE_PROGRAM}")
diff --git a/launch-c.bat.in b/launch-c.bat.in
new file mode 100644
index 0000000..b7eac48
--- /dev/null
+++ b/launch-c.bat.in
@@ -0,0 +1,5 @@
+@echo off
+
+${CCCACHE_EXPORTS}
+
+"${C_LAUNCHER}" %*
diff --git a/launch-cxx.bat.in b/launch-cxx.bat.in
new file mode 100644
index 0000000..cbef98d
--- /dev/null
+++ b/launch-cxx.bat.in
@@ -0,0 +1,5 @@
+@echo off
+
+${CCCACHE_EXPORTS}
+
+"${CXX_LAUNCHER}" %*
